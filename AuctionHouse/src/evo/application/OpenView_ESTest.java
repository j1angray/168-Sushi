/*
 * This file was automatically generated by EvoSuite
 * Fri Apr 03 22:12:06 GMT 2020
 */

package application;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import application.OpenView;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.concurrent.Future;
import java.util.concurrent.TimeUnit;
import javafx.stage.Stage;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class OpenView_ESTest extends OpenView_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Stage stage0 = mock(Stage.class, new ViolatedAssumptionAnswer());
      Stage stage1 = mock(Stage.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        OpenView.OpenViewBank(stage0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
      }
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      OpenView openView0 = new OpenView();
      Integer integer0 = new Integer(0);
      openView0.getIndex();
      openView0.setIndex(integer0);
      openView0.indexProperty();
      Stage stage0 = mock(Stage.class, new ViolatedAssumptionAnswer());
      OpenView.OpenViewAddUserAuction(stage0);
      // Undeclared exception!
      try { 
        openView0.indexProperty();
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
      }
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Stage stage0 = mock(Stage.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        OpenView.OpenViewBackBank(stage0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
      }
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      OpenView openView0 = new OpenView();
      Integer integer0 = new Integer(0);
      openView0.setIndex(integer0);
      openView0.indexProperty();
      Stage stage0 = null;
      OpenView.OpenViewAddUserAuction((Stage) null);
      // Undeclared exception!
      try { 
        OpenView.OpenViewBank(stage0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      OpenView.OpenViewBackBank((Stage) null);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      OpenView openView0 = new OpenView();
      openView0.getIndex();
      Integer integer0 = new Integer((-320));
      openView0.setIndex(integer0);
      openView0.getIndex();
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            @Override public void run() { 
          OpenView openView0 = new OpenView();
          Stage stage0 = mock(Stage.class, new ViolatedAssumptionAnswer());
          // Undeclared exception!
          try { 
            OpenView.OpenViewAddUserAuction(stage0);
            fail("Expecting exception: ExceptionInInitializerError");
          
          } catch(ExceptionInInitializerError e) {
          }
      } 
    });
    future.get(4000, TimeUnit.MILLISECONDS);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Stage stage0 = mock(Stage.class, new ViolatedAssumptionAnswer());
      // Undeclared exception!
      try { 
        OpenView.OpenViewAddUserAuction(stage0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
      }
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      OpenView openView0 = new OpenView();
      Stage stage0 = null;
      // Undeclared exception!
      try { 
        OpenView.OpenViewBank((Stage) null);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Stage stage0 = null;
      // Undeclared exception!
      try { 
        OpenView.OpenViewBank((Stage) null);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      OpenView openView0 = new OpenView();
      Integer integer0 = new Integer((-1));
      openView0.setIndex(integer0);
      Integer integer1 = new Integer(2164);
      openView0.setIndex(integer1);
      openView0.getIndex();
      openView0.indexProperty();
      Stage stage0 = mock(Stage.class, new ViolatedAssumptionAnswer());
      OpenView.OpenViewBackBank(stage0);
      openView0.getIndex();
      // Undeclared exception!
      try { 
        openView0.getIndex();
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      OpenView openView0 = new OpenView();
      Stage stage0 = mock(Stage.class, new ViolatedAssumptionAnswer());
      openView0.setIndex((Integer) null);
      // Undeclared exception!
      try { 
        OpenView.OpenViewBackBank(stage0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("application.OpenView", e);
      }
  }
}
