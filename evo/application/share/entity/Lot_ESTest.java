/*
 * This file was automatically generated by EvoSuite
 * Fri Apr 03 21:15:07 GMT 2020
 */

package application.share.entity;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import application.share.entity.Lot;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class Lot_ESTest extends application.share.entity.Lot_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      Lot lot0 = new Lot("zI-,I0y?FB51", "zI-,I0y?FB51", "");
      lot0.setAuctionId("");
      assertNull(lot0.getState());
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      Lot lot0 = new Lot(">IgMlyUN'", ">IgMlyUN'", ">IgMlyUN'", "");
      String string0 = lot0.getUserName();
      assertEquals(">IgMlyUN'", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      Lot lot0 = new Lot("q5H", "q5H", "", "q5H");
      String string0 = lot0.getUserName();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      Lot lot0 = new Lot("qB5-Yz,{_", "qB5-Yz,{_", "1n,9b4]0p:p)dAM");
      lot0.setState("qB5-Yz,{_");
      String string0 = lot0.getState();
      assertEquals("qB5-Yz,{_", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      Lot lot0 = new Lot("", "", "");
      lot0.setState("");
      String string0 = lot0.getState();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      Lot lot0 = new Lot("", (String) null, "");
      String string0 = lot0.getPrijectId();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      Lot lot0 = new Lot("iv|^rdo^fvwz>", "", "=aOjaoscfz`8-@:L*as");
      String string0 = lot0.getPrijectId();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      Lot lot0 = new Lot("", (String) null, (String) null, "OtgbC-^:oA,rd");
      String string0 = lot0.getName();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      Lot lot0 = new Lot("'r", "'r", (String) null, (String) null);
      String string0 = lot0.getName();
      assertEquals("'r", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      Lot lot0 = new Lot("'r", "'r", (String) null, (String) null);
      String string0 = lot0.getMoney();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      Lot lot0 = new Lot((String) null, "1Nb", "");
      String string0 = lot0.getAuctionId();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      Lot lot0 = new Lot("Wa-gTI#", "", "");
      String string0 = lot0.getAuctionId();
      assertEquals("Wa-gTI#", string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      Lot lot0 = new Lot("", "", "");
      String string0 = lot0.getAuctionId();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      Lot lot0 = new Lot((String) null, (String) null, (String) null);
      // Undeclared exception!
      try { 
        lot0.setUserName("");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("application.share.entity.Lot", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      Lot lot0 = new Lot("U.;#/}X(#dr'V{dE", "U.;#/}X(#dr'V{dE", "U.;#/}X(#dr'V{dE");
      // Undeclared exception!
      try { 
        lot0.setMoney("U.;#/}X(#dr'V{dE");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("application.share.entity.Lot", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      Lot lot0 = new Lot("", "", "");
      // Undeclared exception!
      try { 
        lot0.getUserName();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("application.share.entity.Lot", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      Lot lot0 = new Lot("Wa-gTI#", "", "");
      // Undeclared exception!
      try { 
        lot0.getMoney();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("application.share.entity.Lot", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      Lot lot0 = new Lot("q5H", "q5H", "", "q5H");
      // Undeclared exception!
      try { 
        lot0.getAuctionId();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("application.share.entity.Lot", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      Lot lot0 = new Lot("q5H", "q5H", "", "q5H");
      String string0 = lot0.getPrijectId();
      assertEquals("q5H", string0);
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      Lot lot0 = new Lot("q5H", "q5H", "", "q5H");
      String string0 = lot0.getMoney();
      assertEquals("q5H", string0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      Lot lot0 = new Lot("q5H", "q5H", "", "q5H");
      lot0.setPrijectId("");
      assertNull(lot0.getState());
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      Lot lot0 = new Lot("q5H", "q5H", "", "q5H");
      lot0.setMoney("");
      String string0 = lot0.getMoney();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      Lot lot0 = new Lot("q5H", "q5H", "", "q5H");
      String string0 = lot0.getState();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      Lot lot0 = new Lot((String) null, "", (String) null, "");
      String string0 = lot0.getUserName();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      Lot lot0 = new Lot((String) null, "", (String) null, "");
      // Undeclared exception!
      try { 
        lot0.setAuctionId((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("application.share.entity.Lot", e);
      }
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      Lot lot0 = new Lot((String) null, "", (String) null, "");
      lot0.setUserName("");
      assertNull(lot0.getState());
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      Lot lot0 = new Lot((String) null, "", (String) null, "");
      lot0.setName((String) null);
      assertNull(lot0.getState());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      Lot lot0 = new Lot("", "", "");
      String string0 = lot0.getName();
      assertEquals("", string0);
  }
}
