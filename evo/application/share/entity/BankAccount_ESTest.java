/*
 * This file was automatically generated by EvoSuite
 * Tue Mar 31 01:29:28 GMT 2020
 */

package application.share.entity;

import org.junit.Test;
import static org.junit.Assert.*;
import application.share.entity.BankAccount;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class BankAccount_ESTest extends application.share.entity.BankAccount_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      BankAccount bankAccount0 = new BankAccount("", "", "", "=&k[sJ(+f }.8tna", (String) null, "=&k[sJ(+f }.8tna");
      String string0 = bankAccount0.getState();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      BankAccount bankAccount0 = new BankAccount("", "", "", "", "", (String) null);
      String string0 = bankAccount0.getState();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      BankAccount bankAccount0 = new BankAccount((String) null, (String) null, (String) null, (String) null, (String) null, (String) null);
      String string0 = bankAccount0.getMoney();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      BankAccount bankAccount0 = new BankAccount("", "", "", "WX#*L9EN^%Q9", "", ")hOC{;G9&8a");
      String string0 = bankAccount0.getMoney();
      assertEquals("WX#*L9EN^%Q9", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      BankAccount bankAccount0 = new BankAccount("%4Mpk]ztk gOc(", "%4Mpk]ztk gOc(", "%4Mpk]ztk gOc(", "%4Mpk]ztk gOc(", "%4Mpk]ztk gOc(", "%4Mpk]ztk gOc(");
      String string0 = bankAccount0.getGetKey();
      assertEquals("%4Mpk]ztk gOc(", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      BankAccount bankAccount0 = new BankAccount(">TL*nGOEAT`JRO?", ">TL*nGOEAT`JRO?", "(ph#QH", "", "z=?}2H\"T]n", "");
      String string0 = bankAccount0.getGetKey();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      BankAccount bankAccount0 = new BankAccount((String) null, "u:a/#RM?PAJ", (String) null, "%Lc,qk/#PT^&", "7 PG%!]8", "7 PG%!]8");
      String string0 = bankAccount0.getBankName();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      BankAccount bankAccount0 = new BankAccount("", "", "application.share.entity.BankAccount", "", "(:e:(2aOFX?B4YwEM%9", "");
      String string0 = bankAccount0.getBankName();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      BankAccount bankAccount0 = new BankAccount((String) null, "{8x]~!K", (String) null, "oOat", "", "oOat");
      String string0 = bankAccount0.getBankKey();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      BankAccount bankAccount0 = new BankAccount("", "", "", "", "", "");
      String string0 = bankAccount0.getBankKey();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      BankAccount bankAccount0 = new BankAccount((String) null, (String) null, (String) null, (String) null, (String) null, "jaLPEX");
      String string0 = bankAccount0.getBankAccount();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      BankAccount bankAccount0 = new BankAccount(",6`2-jI9iozx5f#ld(;", ",6`2-jI9iozx5f#ld(;", ",6`2-jI9iozx5f#ld(;", ",6`2-jI9iozx5f#ld(;", (String) null, (String) null);
      String string0 = bankAccount0.getBankAccount();
      assertEquals(",6`2-jI9iozx5f#ld(;", string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      BankAccount bankAccount0 = new BankAccount("qp/=,[[zVgSqtQBD", "qp/=,[[zVgSqtQBD", "qp/=,[[zVgSqtQBD", "Xt{", "application.share.entity.BankAccount", "Xt{");
      bankAccount0.setBankKey((String) null);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      BankAccount bankAccount0 = new BankAccount("", "", "application.share.entity.BankAccount", "", "(:e:(2aOFX?B4YwEM%9", "");
      bankAccount0.setState("(:e:(2aOFX?B4YwEM%9");
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      BankAccount bankAccount0 = new BankAccount("", "", "", "", "", "");
      bankAccount0.setBankName("");
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      BankAccount bankAccount0 = new BankAccount("kG_xkL#e:8c", "kG_xkL#e:8c", "]F", "kG_xkL#e:8c", "M(KIghV", "]F");
      bankAccount0.setBankAccount("");
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      BankAccount bankAccount0 = new BankAccount("", "", "", "", "", (String) null);
      String string0 = bankAccount0.getGetKey();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      BankAccount bankAccount0 = new BankAccount("qp/=,[[zVgSqtQBD", "qp/=,[[zVgSqtQBD", "qp/=,[[zVgSqtQBD", "Xt{", "application.share.entity.BankAccount", "Xt{");
      String string0 = bankAccount0.getBankName();
      assertEquals("qp/=,[[zVgSqtQBD", string0);
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      BankAccount bankAccount0 = new BankAccount("qp/=,[[zVgSqtQBD", "qp/=,[[zVgSqtQBD", "qp/=,[[zVgSqtQBD", "Xt{", "application.share.entity.BankAccount", "Xt{");
      bankAccount0.setGetKey("Xt{");
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      BankAccount bankAccount0 = new BankAccount("", "", "application.share.entity.BankAccount", "", "application.share.entity.BankAccount", "");
      String string0 = bankAccount0.getMoney();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      BankAccount bankAccount0 = new BankAccount("%4Mpk]ztk gOc(", "%4Mpk]ztk gOc(", "%4Mpk]ztk gOc(", "%4Mpk]ztk gOc(", "%4Mpk]ztk gOc(", "%4Mpk]ztk gOc(");
      bankAccount0.setMoney("%4Mpk]ztk gOc(");
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      BankAccount bankAccount0 = new BankAccount("", "", "application.share.entity.BankAccount", "", "application.share.entity.BankAccount", "");
      String string0 = bankAccount0.getBankKey();
      assertEquals("application.share.entity.BankAccount", string0);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      BankAccount bankAccount0 = new BankAccount("", "", "application.share.entity.BankAccount", "", "application.share.entity.BankAccount", "");
      String string0 = bankAccount0.getState();
      assertEquals("application.share.entity.BankAccount", string0);
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      BankAccount bankAccount0 = new BankAccount("", "", "", "", "", "");
      String string0 = bankAccount0.getBankAccount();
      assertEquals("", string0);
  }
}
