/*
 * This file was automatically generated by EvoSuite
 * Fri Apr 03 20:27:13 GMT 2020
 */

package application.share.entity;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import application.share.entity.BankAccount;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class BankAccount_ESTest extends application.share.entity.BankAccount_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      BankAccount bankAccount0 = new BankAccount("", "", "", "$l)@nX)z`", (String) null, (String) null);
      String string0 = bankAccount0.getState();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      BankAccount bankAccount0 = new BankAccount("", "application.share.entity.BankAccount", "", "<]l=9;oPV%", "", "application.share.entity.BankAccount");
      bankAccount0.setState("I*|/9k:g<Gd^;B ");
      String string0 = bankAccount0.getState();
      assertEquals("I*|/9k:g<Gd^;B ", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      BankAccount bankAccount0 = new BankAccount(",%+S:2L]&hbUN", (String) null, "/~OA]a_|rsOi%7~[y", (String) null, "", (String) null);
      String string0 = bankAccount0.getMoney();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      BankAccount bankAccount0 = new BankAccount("", "", "", "ZLMKMV:+3eF", "", "ZLMKMV:+3eF");
      bankAccount0.money = bankAccount0.bankName;
      String string0 = bankAccount0.getMoney();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      BankAccount bankAccount0 = new BankAccount("", "", "application.share.entity.BankAccount", "", "application.share.entity.BankAccount", (String) null);
      String string0 = bankAccount0.getGetKey();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      BankAccount bankAccount0 = new BankAccount("", "", "", "", "R'`JwtXfSp}", "");
      String string0 = bankAccount0.getGetKey();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      BankAccount bankAccount0 = new BankAccount((String) null, "v|ZL~RS$@O17R", "", (String) null, "application.share.entity.BankAccount", "");
      String string0 = bankAccount0.getBankName();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      BankAccount bankAccount0 = new BankAccount("5Kz8", "5Kz8", "application.share.entity.BankAccount", "", "", "cZE4Z");
      String string0 = bankAccount0.getBankName();
      assertEquals("5Kz8", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      BankAccount bankAccount0 = new BankAccount("cWD&?5~nNT$y", "cWD&?5~nNT$y", "cWD&?5~nNT$y", "&24[&4", "cWD&?5~nNT$y", "&24[&4");
      bankAccount0.setBankKey((String) null);
      String string0 = bankAccount0.getBankKey();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      BankAccount bankAccount0 = new BankAccount("5Kz8", "5Kz8", "application.share.entity.BankAccount", "", "", "cZE4Z");
      String string0 = bankAccount0.getBankKey();
      assertEquals("application.share.entity.BankAccount", string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      BankAccount bankAccount0 = new BankAccount("", "y R[*@8{6t\"-zR\"z6v", "", "", "", "");
      bankAccount0.setBankAccount((String) null);
      String string0 = bankAccount0.getBankAccount();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      BankAccount bankAccount0 = new BankAccount("5Kz8", "5Kz8", "application.share.entity.BankAccount", "", "", "cZE4Z");
      bankAccount0.state = null;
      // Undeclared exception!
      try { 
        bankAccount0.setState("");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("application.share.entity.BankAccount", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      BankAccount bankAccount0 = new BankAccount("", "application.share.entity.BankAccount", "", "<]l=9;oPV%", "", "application.share.entity.BankAccount");
      bankAccount0.money = null;
      // Undeclared exception!
      try { 
        bankAccount0.setMoney((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("application.share.entity.BankAccount", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      BankAccount bankAccount0 = new BankAccount("cWD&?5~nNT$y", "cWD&?5~nNT$y", "cWD&?5~nNT$y", "&24[&4", "cWD&?5~nNT$y", "&24[&4");
      bankAccount0.getKey = null;
      // Undeclared exception!
      try { 
        bankAccount0.setGetKey("application.share.entity.BankAccount");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("application.share.entity.BankAccount", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      BankAccount bankAccount0 = new BankAccount(" T@|~a$y?;5", "", "application.share.entity.BankAccount", " T@|~a$y?;5", "", "l{:0%,CI3hB:|\"");
      bankAccount0.bankName = null;
      // Undeclared exception!
      try { 
        bankAccount0.setBankName("");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("application.share.entity.BankAccount", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      BankAccount bankAccount0 = new BankAccount("=N19u0P=Dn", "", "", "=N19u0P=Dn", "]0?uFV;TD&9<RUP)0", (String) null);
      bankAccount0.bankKey = null;
      // Undeclared exception!
      try { 
        bankAccount0.setBankKey((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("application.share.entity.BankAccount", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      BankAccount bankAccount0 = new BankAccount("", "", "", "", "Ks:TD]", "$H,$$+{z");
      bankAccount0.bankAccount = bankAccount0.bankName;
      bankAccount0.bankAccount = null;
      // Undeclared exception!
      try { 
        bankAccount0.setBankAccount("");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("application.share.entity.BankAccount", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      BankAccount bankAccount0 = new BankAccount("l8t!f8h", "l8t!f8h", "application.share.entity.BankAccount", "application.share.entity.BankAccount", "AgX:]WJ2{8@Jq&3f", "Dkk<uM= 4Q\"_;o");
      bankAccount0.state = null;
      // Undeclared exception!
      try { 
        bankAccount0.getState();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("application.share.entity.BankAccount", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      BankAccount bankAccount0 = new BankAccount("", "", "application.share.entity.BankAccount", "", "application.share.entity.BankAccount", (String) null);
      bankAccount0.money = null;
      // Undeclared exception!
      try { 
        bankAccount0.getMoney();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("application.share.entity.BankAccount", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      BankAccount bankAccount0 = new BankAccount("wWB3IK7Qv", "wWB3IK7Qv", "", "", "", "wWB3IK7Qv");
      bankAccount0.getKey = null;
      // Undeclared exception!
      try { 
        bankAccount0.getGetKey();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("application.share.entity.BankAccount", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      BankAccount bankAccount0 = new BankAccount("';Kf5|P`uEWe", "';Kf5|P`uEWe", "';Kf5|P`uEWe", "X9t[IG_M", "C1W&$BcnDiq;({", "X9t[IG_M");
      bankAccount0.bankKey = null;
      // Undeclared exception!
      try { 
        bankAccount0.getBankKey();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("application.share.entity.BankAccount", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      BankAccount bankAccount0 = new BankAccount("-(+c)!j", "", "-(+c)!j", "LB", "`Gq4aJ", "LB");
      bankAccount0.bankAccount = null;
      // Undeclared exception!
      try { 
        bankAccount0.getBankAccount();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("application.share.entity.BankAccount", e);
      }
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      BankAccount bankAccount0 = new BankAccount("", "", "", "ZLMKMV:+3eF", "", "ZLMKMV:+3eF");
      bankAccount0.setBankName("cn");
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      BankAccount bankAccount0 = new BankAccount("", "", "", "ZLMKMV:+3eF", "", "ZLMKMV:+3eF");
      bankAccount0.setBankAccount("ZLMKMV:+3eF");
      String string0 = bankAccount0.getBankAccount();
      assertEquals("ZLMKMV:+3eF", string0);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      BankAccount bankAccount0 = new BankAccount("", "", "", "ZLMKMV:+3eF", "", "ZLMKMV:+3eF");
      String string0 = bankAccount0.getGetKey();
      assertEquals("ZLMKMV:+3eF", string0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      BankAccount bankAccount0 = new BankAccount("", "", "", "ZLMKMV:+3eF", "", "ZLMKMV:+3eF");
      String string0 = bankAccount0.getBankName();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      BankAccount bankAccount0 = new BankAccount("", "", "", "ZLMKMV:+3eF", "", "ZLMKMV:+3eF");
      bankAccount0.setGetKey("B0uK=r_$");
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      BankAccount bankAccount0 = new BankAccount("", "", "", "ZLMKMV:+3eF", "", "ZLMKMV:+3eF");
      String string0 = bankAccount0.getMoney();
      assertEquals("ZLMKMV:+3eF", string0);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      BankAccount bankAccount0 = new BankAccount("", "", "", "ZLMKMV:+3eF", "", "ZLMKMV:+3eF");
      bankAccount0.setMoney("1uPhw45sh");
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      BankAccount bankAccount0 = new BankAccount("", "", "", "ZLMKMV:+3eF", "", "ZLMKMV:+3eF");
      String string0 = bankAccount0.getBankKey();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      BankAccount bankAccount0 = new BankAccount("", "", "", "M*D> Y:rkfb?~Dh-om", "", "");
      String string0 = bankAccount0.getState();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      BankAccount bankAccount0 = new BankAccount("", "", "", "", "R'`JwtXfSp}", "");
      String string0 = bankAccount0.getBankAccount();
      assertEquals("", string0);
  }
}
