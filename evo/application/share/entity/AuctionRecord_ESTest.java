/*
 * This file was automatically generated by EvoSuite
 * Fri Apr 03 20:28:44 GMT 2020
 */

package application.share.entity;

import org.junit.Test;
import static org.junit.Assert.*;
import application.share.entity.AuctionRecord;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class AuctionRecord_ESTest extends application.share.entity.AuctionRecord_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      AuctionRecord auctionRecord0 = new AuctionRecord();
      auctionRecord0.setUserName("bK3|v]-i3PXM-CY");
      String string0 = auctionRecord0.getUserName();
      assertEquals("bK3|v]-i3PXM-CY", string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      AuctionRecord auctionRecord0 = new AuctionRecord();
      auctionRecord0.setUserName("");
      String string0 = auctionRecord0.getUserName();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      AuctionRecord auctionRecord0 = new AuctionRecord();
      auctionRecord0.setState("");
      String string0 = auctionRecord0.getState();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      AuctionRecord auctionRecord0 = new AuctionRecord();
      auctionRecord0.setPrijectId("");
      String string0 = auctionRecord0.getPrijectId();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      AuctionRecord auctionRecord0 = new AuctionRecord();
      auctionRecord0.setMoney("");
      String string0 = auctionRecord0.getMoney();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      AuctionRecord auctionRecord0 = new AuctionRecord();
      auctionRecord0.setIp("");
      String string0 = auctionRecord0.getIp();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      AuctionRecord auctionRecord0 = new AuctionRecord();
      auctionRecord0.setMoney("application.share.entity.AuctionRecord");
      String string0 = auctionRecord0.getMoney();
      assertEquals("application.share.entity.AuctionRecord", string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      AuctionRecord auctionRecord0 = new AuctionRecord();
      String string0 = auctionRecord0.getState();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      AuctionRecord auctionRecord0 = new AuctionRecord();
      auctionRecord0.setPrijectId("T@");
      String string0 = auctionRecord0.getPrijectId();
      assertEquals("T@", string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      AuctionRecord auctionRecord0 = new AuctionRecord();
      auctionRecord0.setIp("application.share.entity.AuctionRecord");
      String string0 = auctionRecord0.getIp();
      assertEquals("application.share.entity.AuctionRecord", string0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      AuctionRecord auctionRecord0 = new AuctionRecord();
      String string0 = auctionRecord0.getUserName();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      AuctionRecord auctionRecord0 = new AuctionRecord();
      auctionRecord0.setState("application.share.entity.AuctionRecord");
      String string0 = auctionRecord0.getState();
      assertEquals("application.share.entity.AuctionRecord", string0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      AuctionRecord auctionRecord0 = new AuctionRecord();
      String string0 = auctionRecord0.getIp();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      AuctionRecord auctionRecord0 = new AuctionRecord();
      String string0 = auctionRecord0.getPrijectId();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      AuctionRecord auctionRecord0 = new AuctionRecord();
      String string0 = auctionRecord0.getMoney();
      assertNull(string0);
  }
}
