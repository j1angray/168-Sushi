/*
 * This file was automatically generated by EvoSuite
 * Tue Mar 31 01:28:47 GMT 2020
 */

package application.share.entity;

import org.junit.Test;
import static org.junit.Assert.*;
import application.share.entity.UserRequest;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class UserRequest_ESTest extends UserRequest_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      UserRequest userRequest0 = new UserRequest((String) null, (String) null, (String) null, (String) null, (String) null, (String) null);
      String string0 = userRequest0.getUserName();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      UserRequest userRequest0 = new UserRequest("", "", "q5j`Vz0i", "q5j`Vz0i", "(pP.('`O)VWU=", "");
      String string0 = userRequest0.getUserName();
      assertEquals("", userRequest0.getTypevalue());
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      UserRequest userRequest0 = new UserRequest((String) null, (String) null, (String) null, (String) null, (String) null, (String) null);
      String string0 = userRequest0.getTypevalue();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      UserRequest userRequest0 = new UserRequest("[D)*Vs[n4%nj0'~", "4", "[D)*Vs[n4%nj0'~", "><U", "[D)*Vs[n4%nj0'~", "><U");
      String string0 = userRequest0.getTypevalue();
      assertEquals("><U", string0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      UserRequest userRequest0 = new UserRequest((String) null, (String) null, (String) null, (String) null, (String) null, (String) null);
      String string0 = userRequest0.getType();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      UserRequest userRequest0 = new UserRequest("[D)*Vs[n4%nj0'~", "4", "[D)*Vs[n4%nj0'~", "><U", "[D)*Vs[n4%nj0'~", "><U");
      userRequest0.setType("");
      userRequest0.getType();
      assertEquals("><U", userRequest0.getTypevalue());
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      UserRequest userRequest0 = new UserRequest((String) null, (String) null, (String) null, (String) null, (String) null, (String) null);
      String string0 = userRequest0.getId();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      UserRequest userRequest0 = new UserRequest("h$ESi&4X", "", "^7B4a4JsLp", "", "", "");
      String string0 = userRequest0.getId();
      assertEquals("", userRequest0.getTypevalue());
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      UserRequest userRequest0 = new UserRequest((String) null, (String) null, (String) null, (String) null, (String) null, (String) null);
      String string0 = userRequest0.getDate();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      UserRequest userRequest0 = new UserRequest("h$ESi&4X", "", "^7B4a4JsLp", "", "", "");
      userRequest0.setDate("");
      userRequest0.getDate();
      assertEquals("", userRequest0.getTypevalue());
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      UserRequest userRequest0 = new UserRequest((String) null, (String) null, (String) null, (String) null, (String) null, (String) null);
      String string0 = userRequest0.getBankKey();
      assertNull(string0);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      UserRequest userRequest0 = new UserRequest("", "", "q5j`Vz0i", "q5j`Vz0i", "(pP.('`O)VWU=", "");
      userRequest0.setBankKey("'CQ _f|WOMr<");
      userRequest0.getBankKey();
      assertEquals("", userRequest0.getTypevalue());
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      UserRequest userRequest0 = new UserRequest(" ncAZ&6@", "", " ncAZ&6@", " ncAZ&6@", " ncAZ&6@", "");
      String string0 = userRequest0.getBankKey();
      assertEquals("", userRequest0.getTypevalue());
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      UserRequest userRequest0 = new UserRequest(" ncAZ&6@", "", " ncAZ&6@", " ncAZ&6@", " ncAZ&6@", "");
      userRequest0.setUserName("");
      assertEquals("", userRequest0.getTypevalue());
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      UserRequest userRequest0 = new UserRequest(" ncAZ&6@", "", " ncAZ&6@", " ncAZ&6@", " ncAZ&6@", "");
      String string0 = userRequest0.getTypevalue();
      assertEquals("", string0);
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      UserRequest userRequest0 = new UserRequest(" ncAZ&6@", "", " ncAZ&6@", " ncAZ&6@", " ncAZ&6@", "");
      String string0 = userRequest0.getUserName();
      assertEquals("", userRequest0.getTypevalue());
      assertEquals(" ncAZ&6@", string0);
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      UserRequest userRequest0 = new UserRequest(" ncAZ&6@", "", " ncAZ&6@", " ncAZ&6@", " ncAZ&6@", "");
      String string0 = userRequest0.getDate();
      assertEquals("", userRequest0.getTypevalue());
      assertEquals(" ncAZ&6@", string0);
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      UserRequest userRequest0 = new UserRequest(" ncAZ&6@", "", " ncAZ&6@", " ncAZ&6@", " ncAZ&6@", "");
      userRequest0.setId("%AE; Zs4k{yschd");
      assertEquals("", userRequest0.getTypevalue());
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      UserRequest userRequest0 = new UserRequest(" ncAZ&6@", "", " ncAZ&6@", " ncAZ&6@", " ncAZ&6@", "");
      userRequest0.setTypevalue("");
      assertEquals("", userRequest0.getTypevalue());
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      UserRequest userRequest0 = new UserRequest(" ncAZ&6@", "", " ncAZ&6@", " ncAZ&6@", " ncAZ&6@", "");
      String string0 = userRequest0.getId();
      assertEquals(" ncAZ&6@", string0);
      assertEquals("", userRequest0.getTypevalue());
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      UserRequest userRequest0 = new UserRequest(" ncAZ&6@", "", " ncAZ&6@", " ncAZ&6@", " ncAZ&6@", "");
      String string0 = userRequest0.getType();
      assertEquals("", userRequest0.getTypevalue());
      assertEquals(" ncAZ&6@", string0);
  }
}
